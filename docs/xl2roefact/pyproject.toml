[project]
name = "xl2roefact"
# version = "...""  #NOTE: this entry is automatically maintained from `xl2roefact/__version__` file
dynamic = ["version"]
description = "Excel invoices data retrieve, export & upload to RO E-Fact system"
authors = [
    { name = "Petre Iordanescu", email = "petre.iordanescu@gmail.com" },
    { name = "RENware Software Systems", email = "renware.systems@gmail.com" },
]
dependencies = [
    "altgraph~=0.17",
    "argcomplete~=3.2",
    "commonmark~=0.9",
    "et-xmlfile~=1.1",
    "Fraction~=2.2",
    "Jinja2~=3.1",
    "lief~=0.13",
    "markdown-it-py~=3.0",
    "MarkupSafe~=2.1",
    "mdurl~=0.1",
    "openpyxl~=3.1",
    "packaging~=23.2",
    "pefile~=2023.2",
    "pdm~=2.12",
    "pip~=24.0",
    "platformdirs~=4.1",
    "Pygments~=2.17",
    "pylightxl~=1.61",
    "pyproject-hooks~=1.0",
    "python-dateutil~=2.8",
    "pytzdata~=2020.1",
    "pywin32-ctypes~=0.2",
    "rich~=13.7",
    "setuptools~=69.0",
    "shellingham~=1.5",
    "six~=1.16",
    "time-machine~=2.13",
    "tomli~=2.0",
    "click~=8.1",
    "typer~=0.9",
    "typing-extensions~=4.9",
    "tzdata~=2023.4",
    "userpath~=1.9",
    "wheel~=0.42",
    "msgpack>=1.0.8",
    "pyyaml>=6.0.1",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = "<3.12,>=3.9"
classifiers = [
    # "Product code :: 0000-0095",  # not accepted by PyPi
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License (GPL)",
    "Operating System :: OS Independent",
    "Topic :: Office/Business :: Financial",
]



[project.urls]
Homepage = "https://invoicetoroefact.renware.eu"
PDF-Documentation = "https://invoicetoroefact.renware.eu/pdfs/print_page.html/print_page.pdf"
PyPi-Package = "https://pypi.org/project/xl2roefact/"
GitHub = "https://github.com/petre-renware/api_to_roefact"



[project.scripts]  # NOTE: tested 240420: PASS, can run as simple cmd just to have right Python version & dependencies installed
xl2roefact = "xl2roefact.app_cli:main"



[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"



[tool.pdm]
version = { source = "file", path = "xl2roefact/__version__.py" }
distribution = true  # required for PyPi package publishing



[tool.pdm.build.wheel-data]
data = [{path = "data/*", relative-to = "data/"}]  # installed under `data/...` directory
# NOTE: Below are some examples with different schemes.
# NOTE: Scheme files will be packaged into the {name}-{version}.data/{scheme} directory in the wheel distribution.
# scripts = ["scripts/*"]  # Install all files under scripts/ to the $prefix/bin directory
# include = [{path = "include/**/*.h", relative-to = "include/"}]  # Install all files under include/ to the $prefix/include directory recursively, keeping the directory structure



[tool.pdm.scripts]  # reference: `https://pdm-project.org/latest/usage/scripts/`
build_wheel = { shell = "pdm build --no-clean" }  # build python packages (wheel & sdist) in `dist/` directory
build_msi = { shell = "python setup.py bdist_msi" }  # build MSI pachkage in `dist/` directory
#FIXME `bdist_appimage` must be tested
build_appimage = { shell = "python setup.py bdist_appimage" }  # build APPIMAGE pachkage in `dist/` directory

build_sexe = { cmd = [
    "pyinstaller",
    "--distpath=dist_sexe/",        # folder where to write deliverables
    "--name=xl2roefact",            # name of deliverable (bundled exe file)
    "--log-level=WARN",             # building error logging level
    "--onefile",                    # Create a one-file bundled executable
    "--noconfirm",                  # Replace output directory without asking confirmation
    "xl2roefact_copy_for_sexe.py",  # use the copy of original xl2roefact.py just to have other name than directory containing used library (pyinstaller constraint)
] } # build portable single EXE file
post_build_sexe = { call = "xl2roefact.libutils:complete_sexe_file" }  # process resulted exe to normalise its name and move to `.../dist/`

build_doc = { shell = "pydoc-markdown -I xl2roefact >doc/810.05a-xl2roefact_DLD_specs.md" }  # build API Reference doc (`xl2roefact/doc/810.05a-xl2roefact_DLD_specs.md`). NOTE: to render a TOC use pydoc option `--render-toc`
build_all = { composite = [
    "build_wheel",
    "build_msi",
    "build_sexe",
    "build_doc",
] } # build all packages (MSI, python package wheel, python package sdist, design doc)
xl2roefact = { shell = "python -m xl2roefact" } # run `xl2roefact` as python module

#NOTE use `pypi_publish` with caution and after a clean commit in current branch, as PyPi publishing is configured to accept uploads  only from GittHub as single trusted source @240319
pypi_publish = { shell = "git checkout -b pypi-publish; git push --force" }



[tool.pdm.dev-dependencies] # dependencies used only in develeopment and not transfered in Pythn package building
dev = [
    "build~=1.0",
    "pydoc-markdown~=4.8",
    "cx-Freeze~=6.15",
    "cx-Logging~=3.1",
    "pyinstaller>=4.10",
    "pyinstaller-hooks-contrib~=2023.12",
]



# NOTE: section usef by `cxFreeze`, For details see here: `https://cx-freeze.readthedocs.io/en/latest/setup_script.html#commands`
[tool.distutils.build_exe]
excludes = ["tkinter", "unittest"]
zip_include_packages = ["encodings", "PySide6"]

